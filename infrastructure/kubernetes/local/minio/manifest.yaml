apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-server
  namespace: minio
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      nodeSelector:                  
        "kubernetes.io/os": linux    
      volumes:
      - name: minio-pvc
        persistentVolumeClaim:
          claimName: minio-pvc
      containers:
      - name: minio
        image: minio/minio:RELEASE.2021-04-18T19-26-29Z
        imagePullPolicy: IfNotPresent 
        args:
        - server
        - /data
        volumeMounts:
        - name: minio-pvc
          mountPath: '/data'
        env:
        - name: MINIO_ROOT_USER
          value: "minioadmin" 
        - name: MINIO_ROOT_PASSWORD
          value: "minioadmin"
        - name: MINIO_ACCESS_KEY 
          value: "minioadmin" 
        - name: MINIO_SECRET_KEY
          value: "minioadmin"
        ports:
        - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio
spec:
  type: NodePort
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: http
  selector:
    app: minio 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  namespace: minio
  annotations:
    nginx.ingress.kubernetes.il/add-base-url: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
        - pathType: Prefix
          path: /minio
          backend:
            service:
              name: minio-service
              port:
                number: 9000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi