{
  "version": 4,
  "terraform_version": "1.9.3",
  "serial": 377,
  "lineage": "f13248e6-483a-607a-bbab-ffef7bfa5832",
  "outputs": {},
  "resources": [
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kind_cluster",
      "name": "default",
      "provider": "module.k8s.provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDITCCAgmgAwIBAgIIN0MJnLIKC6gwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNDA3MjYxMjUzNDFaFw0yNTA3MjYxMjUzNDJaMDQx\nFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJzMRkwFwYDVQQDExBrdWJlcm5ldGVzLWFk\nbWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvXR6lsGUzwEW3T8O\nBjM4vBZA5BGfUvnMK0s91vPgH83zdLvcpErdsRSD48H2b2RamxIQixCLTQYfTU1w\nrHg5wd8y8UBi/L6z+9ZA0jsGvPNv1lPRn44fd2b1i/hRZUlHjY4OkmUrwHG5l7XB\nWJLji+crF8D0YgX/Veis09/p4PCa1v8htlZZ5QgpNCT/lZGCC3oQ7fsWS46qwRyh\nXxqIdF+Fua8HUgaTddpEh//D22aGAIpPJ+afOwJL+uv+xbqUxoHI9U1mBTC3WYMG\n8kce8YI6Ygol+3MGIt6EPxfgUYUeP8bAMhPndLrdxZJPX+sD2+e5X93z8xMhuotu\nukGHnQIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBTcYWQy4AZcG3rx2TBMWOF9o7jf\nszANBgkqhkiG9w0BAQsFAAOCAQEAgTlQEmr3MYCbuXlEA1o0EwA+DSpEKUIfK/yr\n3+RFD7vwf6gZEj6jwFqH7dffn0k9HV8iJLFTmyDM2szMIMoepRHnCpFC7lj5ZahK\nfSBzs0YnKueEq4VnW4QGrB4Grmm/KeaV9NGt7d1AEBOyQMGuRT7xrntD2oEvZWfY\nHD17y+iuB5pElsSCoiJW3imYhua1VzMDAKn21zPi0tcBak6QcvRjVb7LszkLG8KW\nDP8YCViG3em/dP/g1us6eyR0K9pKXdholG6PbjfummDLUzKAWtkNkQU1B7V5PmaS\nOrLZ5RPBKItR1p3sIGttYhQoE59R/iDfaN3PHLaapyCmpjMn0w==\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAvXR6lsGUzwEW3T8OBjM4vBZA5BGfUvnMK0s91vPgH83zdLvc\npErdsRSD48H2b2RamxIQixCLTQYfTU1wrHg5wd8y8UBi/L6z+9ZA0jsGvPNv1lPR\nn44fd2b1i/hRZUlHjY4OkmUrwHG5l7XBWJLji+crF8D0YgX/Veis09/p4PCa1v8h\ntlZZ5QgpNCT/lZGCC3oQ7fsWS46qwRyhXxqIdF+Fua8HUgaTddpEh//D22aGAIpP\nJ+afOwJL+uv+xbqUxoHI9U1mBTC3WYMG8kce8YI6Ygol+3MGIt6EPxfgUYUeP8bA\nMhPndLrdxZJPX+sD2+e5X93z8xMhuotuukGHnQIDAQABAoIBADSHZjIEjHj0yV0g\nzYekjheAaA+UX0OHZTefzg6aYcsPtG/qYpve8ibWFFeDAQwTnBeg45tbQ/RgPS+W\nyCXZ09HQS/SeMJP5YDf0SNbBbPXY3WpkpRuDMXBOyMg9Wnwl3EQAXkPy7zWVkqrg\nxzIC0DqLJuSYKGpBVXGBaOH6FIO8V5yhr5UaRIfug04UH2m3ef07BFDwwpWJx/jo\n/P3zPZP2UPcEiRHbvMFIov6rCvp7KCvilZfPCoPYEhnvEtIQ27vdGVhjoU1fC/Ln\nlopU4+4CVGXBgIcfnZLU7mcDIgsk1nfMnaoOpXIEqRwHrH8ypsdtwSg8ij4x/F/2\nNVi+41UCgYEA9m905emwnuTzMFq38nVZtgc2UDWEqHxVh6RZNUc2F2vSbTOLvaFF\nzJsGsBlrgu+VzPHF6XiYxP3GDwiMKvlyQ99WfQ4IGZrsXH7me4xE1gyFqSeyZxy3\nR0WknxCyp08E40t5P8si+B7ZYSFeCpWmzgeErkUX68hWporkgYu9gV8CgYEAxM7f\nwtqGzCvW/nK6z+2dMfbd1Gqt+NfwUjpvHmWSic/gBWMin90QT6cWoveEhZg6H3rJ\nR3WsdyvbJ+JztaH+Yg1vftN2eKcRS0l3Jc7rRlTxfPQZeI9p7KxcS7efb2MUFEls\nbuF6P05MvWyWF0zvIX+8gqw9iXIXN2hdGVl0LIMCgYAn7Cx65p3XT+3ZwoiUPdCX\nvZld6x2fkezlOYm+KNgpeS0wxa34vXyqRd8Sfju9jYSuG+jdBs1w9E+2tcLHX3vU\nZQUE41YKl998qI48K6AnMQYiPi0XqT5DzJN7tV/L3PBExkBRRl5W5eB/bMFoY5AP\nRoaHGOhkKSNofY3BMtszbwKBgQCbX2MB9vlyWK3rxXG8U6/FUUrBttLP4NKGaEFv\ncurkR6tpNWGRabnF2HijgdsqiQph7dLXyou0rXfgHgQRgelNSaQbMSCXkfWyRTZ+\nL8RIiyj259Lv/fC2+0AGOtnw2vxwI6MqSnHzZoJpDT/U91TWUnzlgMs4Jk0z3f2Z\n1KhFtwKBgBnKBbVb8wu5Oiajt8NY1yXXirN5jGK2criL4YZWovdHq2NdhMVNoIc+\nactUB12GnUvxB6/eTdRnMKYrOnbImW5Z0HzEGfo85Ju3th5lZ9A25TT6ICkZjKT/\nU5Ji2q4HMxbsUdq0nFPsl5MVArP4/pkoOl9utfpuxDZuX9KqbACe\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTI0MDcyNjEyNTM0MVoXDTM0MDcyNDEyNTM0MVowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJga\nWAiNo4c7aEY5JWy9p9JcSUyNJ/YBqKPH49IAkZg8nzWE8BcjULAMfEaPutavjIrh\nah6cn1gniDWhZyLSABHRORZoRgYn34cXIvACrmo7XCA5V1lyuqbJv87PHA4eHUal\nMLNdiZByafMt4IQjZvuvkR7WRHEBGOiDApBnqyi6LQfKSLouba0rsE6u7otSKrWh\n4PXzJ9G93i3S9xDy/cPeZS38p6J8DJg1G74Lg9/yDr+qjZMZ57j05le24Kug+oe+\nyA/gUnZYNjbwV2fpyKhzA3XpPgelZ+ChQJd6YZSgv990I808d9ONNWQv9wBgHnc+\n1xGhHe7ChshxsP8ikncCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFNxhZDLgBlwbevHZMExY4X2juN+zMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAIQ8XlhcjU3YFL1VW0S+\nLmic7EyZMzwl0gVsYpq+Bvc7S5cumTy1oQ+ULXDLpdGNpgdy9COIbUtZCAmj1fq4\nDxOn3djJXCJMUSD2HWNHObRLj4speX0D5kiSF4ZzH986U36C4r95N7zhv7gGubiI\n1nPw7fvwcubZr5H6+RcFDr4MqTOqkp8lr5W19Mk/I8c5GzS9MPqzKZ8Aknxd42aM\nGb3xOxGS6xnbj1gNX8a0Qevfc553h/axhGJ+wA7/ofavd3S9PNVH1ad8JjdVjGhU\n0h7FbfqLMJ3TwrgM1cO0goqmWaZSo9qKK04RtDrRsXfEtDm3rg9xK/lIYtmQbrwM\nk8s=\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:38413",
            "id": "serasa-challenge-",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": [],
                "feature_gates": {},
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "worker"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "worker"
                  }
                ],
                "runtime_config": {}
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJME1EY3lOakV5TlRNME1Wb1hEVE0wTURjeU5ERXlOVE0wTVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSmdhCldBaU5vNGM3YUVZNUpXeTlwOUpjU1V5TkovWUJxS1BINDlJQWtaZzhueldFOEJjalVMQU1mRWFQdXRhdmpJcmgKYWg2Y24xZ25pRFdoWnlMU0FCSFJPUlpvUmdZbjM0Y1hJdkFDcm1vN1hDQTVWMWx5dXFiSnY4N1BIQTRlSFVhbApNTE5kaVpCeWFmTXQ0SVFqWnZ1dmtSN1dSSEVCR09pREFwQm5xeWk2TFFmS1NMb3ViYTByc0U2dTdvdFNLcldoCjRQWHpKOUc5M2kzUzl4RHkvY1BlWlMzOHA2SjhESmcxRzc0TGc5L3lEcitxalpNWjU3ajA1bGUyNEt1ZytvZSsKeUEvZ1VuWllOamJ3VjJmcHlLaHpBM1hwUGdlbForQ2hRSmQ2WVpTZ3Y5OTBJODA4ZDlPTk5XUXY5d0JnSG5jKwoxeEdoSGU3Q2hzaHhzUDhpa25jQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOeGhaRExnQmx3YmV2SFpNRXhZNFgyanVOK3pNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSVE4WGxoY2pVM1lGTDFWVzBTKwpMbWljN0V5Wk16d2wwZ1ZzWXBxK0J2YzdTNWN1bVR5MW9RK1VMWERMcGRHTnBnZHk5Q09JYlV0WkNBbWoxZnE0CkR4T24zZGpKWENKTVVTRDJIV05IT2JSTGo0c3BlWDBENWtpU0Y0WnpIOTg2VTM2QzRyOTVON3podjdnR3ViaUkKMW5QdzdmdndjdWJacjVINitSY0ZEcjRNcVRPcWtwOGxyNVcxOU1rL0k4YzVHelM5TVBxektaOEFrbnhkNDJhTQpHYjN4T3hHUzZ4bmJqMWdOWDhhMFFldmZjNTUzaC9heGhHSit3QTcvb2ZhdmQzUzlQTlZIMWFkOEpqZFZqR2hVCjBoN0ZiZnFMTUozVHdyZ00xY08wZ29xbVdhWlNvOXFLSzA0UnREclJzWGZFdERtM3JnOXhLL2xJWXRtUWJyd00KazhzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://127.0.0.1:38413\n  name: kind-serasa-challenge\ncontexts:\n- context:\n    cluster: kind-serasa-challenge\n    user: kind-serasa-challenge\n  name: kind-serasa-challenge\ncurrent-context: kind-serasa-challenge\nkind: Config\npreferences: {}\nusers:\n- name: kind-serasa-challenge\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJTjBNSm5MSUtDNmd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBM01qWXhNalV6TkRGYUZ3MHlOVEEzTWpZeE1qVXpOREphTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZYUjZsc0dVendFVzNUOE8KQmpNNHZCWkE1QkdmVXZuTUswczkxdlBnSDgzemRMdmNwRXJkc1JTRDQ4SDJiMlJhbXhJUWl4Q0xUUVlmVFUxdwpySGc1d2Q4eThVQmkvTDZ6KzlaQTBqc0d2UE52MWxQUm40NGZkMmIxaS9oUlpVbEhqWTRPa21VcndIRzVsN1hCCldKTGppK2NyRjhEMFlnWC9WZWlzMDkvcDRQQ2ExdjhodGxaWjVRZ3BOQ1QvbFpHQ0Mzb1E3ZnNXUzQ2cXdSeWgKWHhxSWRGK0Z1YThIVWdhVGRkcEVoLy9EMjJhR0FJcFBKK2FmT3dKTCt1dit4YnFVeG9ISTlVMW1CVEMzV1lNRwo4a2NlOFlJNllnb2wrM01HSXQ2RVB4ZmdVWVVlUDhiQU1oUG5kTHJkeFpKUFgrc0QyK2U1WDkzejh4TWh1b3R1CnVrR0huUUlEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUY1lXUXk0QVpjRzNyeDJUQk1XT0Y5bzdqZgpzekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZ1RsUUVtcjNNWUNidVhsRUExbzBFd0ErRFNwRUtVSWZLL3lyCjMrUkZEN3Z3ZjZnWkVqNmp3RnFIN2RmZm4wazlIVjhpSkxGVG15RE0yc3pNSU1vZXBSSG5DcEZDN2xqNVphaEsKZlNCenMwWW5LdWVFcTRWblc0UUdyQjRHcm1tL0tlYVY5Tkd0N2QxQUVCT3lRTUd1UlQ3eHJudEQyb0V2WldmWQpIRDE3eStpdUI1cEVsc1NDb2lKVzNpbVlodWExVnpNREFLbjIxelBpMHRjQmFrNlFjdlJqVmI3THN6a0xHOEtXCkRQOFlDVmlHM2VtL2RQL2cxdXM2ZXlSMEs5cEtYZGhvbEc2UGJqZnVtbURMVXpLQVd0a05rUVUxQjdWNVBtYVMKT3JMWjVSUEJLSXRSMXAzc0lHdHRZaFFvRTU5Ui9pRGZhTjNQSExhYXB5Q21wak1uMHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdlhSNmxzR1V6d0VXM1Q4T0JqTTR2QlpBNUJHZlV2bk1LMHM5MXZQZ0g4M3pkTHZjCnBFcmRzUlNENDhIMmIyUmFteElRaXhDTFRRWWZUVTF3ckhnNXdkOHk4VUJpL0w2eis5WkEwanNHdlBOdjFsUFIKbjQ0ZmQyYjFpL2hSWlVsSGpZNE9rbVVyd0hHNWw3WEJXSkxqaStjckY4RDBZZ1gvVmVpczA5L3A0UENhMXY4aAp0bFpaNVFncE5DVC9sWkdDQzNvUTdmc1dTNDZxd1J5aFh4cUlkRitGdWE4SFVnYVRkZHBFaC8vRDIyYUdBSXBQCkorYWZPd0pMK3V2K3hicVV4b0hJOVUxbUJUQzNXWU1HOGtjZThZSTZZZ29sKzNNR0l0NkVQeGZnVVlVZVA4YkEKTWhQbmRMcmR4WkpQWCtzRDIrZTVYOTN6OHhNaHVvdHV1a0dIblFJREFRQUJBb0lCQURTSFpqSUVqSGoweVYwZwp6WWVramhlQWFBK1VYME9IWlRlZnpnNmFZY3NQdEcvcVlwdmU4aWJXRkZlREFRd1RuQmVnNDV0YlEvUmdQUytXCnlDWFowOUhRUy9TZU1KUDVZRGYwU05iQmJQWFkzV3BrcFJ1RE1YQk95TWc5V253bDNFUUFYa1B5N3pXVmtxcmcKeHpJQzBEcUxKdVNZS0dwQlZYR0JhT0g2RklPOFY1eWhyNVVhUklmdWcwNFVIMm0zZWYwN0JGRHd3cFdKeC9qbwovUDN6UFpQMlVQY0VpUkhidk1GSW92NnJDdnA3S0N2aWxaZlBDb1BZRWhudkV0SVEyN3ZkR1Zoam9VMWZDL0xuCmxvcFU0KzRDVkdYQmdJY2ZuWkxVN21jRElnc2sxbmZNbmFvT3BYSUVxUndIckg4eXBzZHR3U2c4aWo0eC9GLzIKTlZpKzQxVUNnWUVBOW05MDVlbXdudVR6TUZxMzhuVlp0Z2MyVURXRXFIeFZoNlJaTlVjMkYydlNiVE9MdmFGRgp6SnNHc0Jscmd1K1Z6UEhGNlhpWXhQM0dEd2lNS3ZseVE5OVdmUTRJR1pyc1hIN21lNHhFMWd5RnFTZXlaeHkzClIwV2tueEN5cDA4RTQwdDVQOHNpK0I3WllTRmVDcFdtemdlRXJrVVg2OGhXcG9ya2dZdTlnVjhDZ1lFQXhNN2YKd3RxR3pDdlcvbks2eisyZE1mYmQxR3F0K05md1VqcHZIbVdTaWMvZ0JXTWluOTBRVDZjV292ZUVoWmc2SDNySgpSM1dzZHl2YkorSnp0YUgrWWcxdmZ0TjJlS2NSUzBsM0pjN3JSbFR4ZlBRWmVJOXA3S3hjUzdlZmIyTVVGRWxzCmJ1RjZQMDVNdld5V0YwenZJWCs4Z3F3OWlYSVhOMmhkR1ZsMExJTUNnWUFuN0N4NjVwM1hUKzNad29pVVBkQ1gKdlpsZDZ4MmZrZXpsT1ltK0tOZ3BlUzB3eGEzNHZYeXFSZDhTZmp1OWpZU3VHK2pkQnMxdzlFKzJ0Y0xIWDN2VQpaUVVFNDFZS2w5OThxSTQ4SzZBbk1RWWlQaTBYcVQ1RHpKTjd0Vi9MM1BCRXhrQlJSbDVXNWVCL2JNRm9ZNUFQClJvYUhHT2hrS1NOb2ZZM0JNdHN6YndLQmdRQ2JYMk1COXZseVdLM3J4WEc4VTYvRlVVckJ0dExQNE5LR2FFRnYKY3Vya1I2dHBOV0dSYWJuRjJIaWpnZHNxaVFwaDdkTFh5b3UwclhmZ0hnUVJnZWxOU2FRYk1TQ1hrZld5UlRaKwpMOFJJaXlqMjU5THYvZkMyKzBBR090bncydnh3STZNcVNuSHpab0pwRFQvVTkxVFdVbnpsZ01zNEprMHozZjJaCjFLaEZ0d0tCZ0JuS0JiVmI4d3U1T2lhanQ4TlkxeVhYaXJONWpHSzJjcmlMNFlaV292ZEhxMk5kaE1WTm9JYysKYWN0VUIxMkduVXZ4QjYvZVRkUm5NS1lyT25iSW1XNVowSHpFR2ZvODVKdTN0aDVsWjlBMjVUVDZJQ2taaktULwpVNUppMnE0SE14YnNVZHEwbkZQc2w1TVZBclA0L3Brb09sOXV0ZnB1eERadVg5S3FiQUNlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\n",
            "kubeconfig_path": "/home/seoerick/.kube/config",
            "name": "serasa-challenge",
            "node_image": null,
            "timeouts": null,
            "wait_for_ready": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.kafka",
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "docs",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: kafka",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zookeeper\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zookeeper\n  template:\n    metadata:\n      labels:\n        app: zookeeper\n    spec:\n      containers:\n        - name: zookeeper\n          image: confluentinc/cp-zookeeper:latest\n          ports:\n           - containerPort: 2181\n          env:\n            - name: ZOOKEEPER_CLIENT_PORT\n              value: \"2181\"",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: zookeeper-api\n  namespace: kafka\nspec:\n  ports:\n  - port: 2181\n    targetPort: 2181\n  selector:\n    app: zookeeper",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafka\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafka\n  template:\n    metadata:\n      labels:\n        app: kafka\n    spec:\n      containers:\n      - name: kafka\n        image: confluentinc/cp-kafka:latest\n        ports:\n        - containerPort: 9092\n        env:\n        - name: KAFKA_BROKER_ID\n          value: \"1\"\n        - name: KAFKA_ZOOKEEPER_CONNECT\n          value: zookeeper-api.kafka.svc.cluster.local::2181\n        - name: KAFKA_ADVERTISED_LISTENERS\n          value: PLAINTEXT://kafka-api.kafka.svc.cluster.local:29092,PLAINTEXT_HOST://kafka-api.kafka.svc.cluster.local:9092\n        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP\n          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n        - name: KAFKA_INTER_BROKER_LISTENER_NAME\n          value: PLAINTEXT\n        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR\n          value: \"1\"",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafka-api\n  namespace: kafka\nspec:\n  ports:\n  - port: 9092\n    targetPort: 9092\n    name: service\n  - port: 29092\n    targetPort: 29092\n    name: broker\n  selector:\n    app: kafka",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafdrop\n  template:\n    metadata:\n      labels:\n        app: kafdrop\n    spec:\n      containers:\n      - name: kafdrop\n        image: obsidiandynamics/kafdrop:latest\n        ports:\n        - containerPort: 9000\n        env:\n        - name: KAFKA_BROKERCONNECT\n          value: http://kafka-api.kafka.svc.cluster.local:29092",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  ports:\n  - port: 9000\n    targetPort: 9000\n    name: ui\n  selector:\n    app: kafdrop"
            ],
            "id": "38b984d7226544f44f8f4a1f18d97d66ac5fb7059b90ef96d655572f7493c6cc",
            "manifests": {
              "/api/v1/namespaces/kafka": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: kafka\n",
              "/api/v1/namespaces/kafka/services/kafdrop": "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  ports:\n  - name: ui\n    port: 9000\n    targetPort: 9000\n  selector:\n    app: kafdrop\n",
              "/api/v1/namespaces/kafka/services/kafka-api": "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafka-api\n  namespace: kafka\nspec:\n  ports:\n  - name: service\n    port: 9092\n    targetPort: 9092\n  - name: broker\n    port: 29092\n    targetPort: 29092\n  selector:\n    app: kafka\n",
              "/api/v1/namespaces/kafka/services/zookeeper-api": "apiVersion: v1\nkind: Service\nmetadata:\n  name: zookeeper-api\n  namespace: kafka\nspec:\n  ports:\n  - port: 2181\n    targetPort: 2181\n  selector:\n    app: zookeeper\n",
              "/apis/apps/v1/namespaces/kafka/deployments/kafdrop": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafdrop\n  template:\n    metadata:\n      labels:\n        app: kafdrop\n    spec:\n      containers:\n      - env:\n        - name: KAFKA_BROKERCONNECT\n          value: http://kafka-api.kafka.svc.cluster.local:29092\n        image: obsidiandynamics/kafdrop:latest\n        name: kafdrop\n        ports:\n        - containerPort: 9000\n",
              "/apis/apps/v1/namespaces/kafka/deployments/kafka": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafka\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafka\n  template:\n    metadata:\n      labels:\n        app: kafka\n    spec:\n      containers:\n      - env:\n        - name: KAFKA_BROKER_ID\n          value: \"1\"\n        - name: KAFKA_ZOOKEEPER_CONNECT\n          value: zookeeper-api.kafka.svc.cluster.local::2181\n        - name: KAFKA_ADVERTISED_LISTENERS\n          value: PLAINTEXT://kafka-api.kafka.svc.cluster.local:29092,PLAINTEXT_HOST://kafka-api.kafka.svc.cluster.local:9092\n        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP\n          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n        - name: KAFKA_INTER_BROKER_LISTENER_NAME\n          value: PLAINTEXT\n        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR\n          value: \"1\"\n        image: confluentinc/cp-kafka:latest\n        name: kafka\n        ports:\n        - containerPort: 9092\n",
              "/apis/apps/v1/namespaces/kafka/deployments/zookeeper": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zookeeper\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zookeeper\n  template:\n    metadata:\n      labels:\n        app: zookeeper\n    spec:\n      containers:\n      - env:\n        - name: ZOOKEEPER_CLIENT_PORT\n          value: \"2181\"\n        image: confluentinc/cp-zookeeper:latest\n        name: zookeeper\n        ports:\n        - containerPort: 2181\n"
            },
            "pattern": "kafka/manifest.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_vars"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.kafka",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "kafka",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/kafka",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "5590cdb736811be18c595bdc0e9c807f82e2d2902779ba6f7f9f45a41ad65f16",
            "live_uid": "5e3f3238-ce0d-4cbc-a85f-0b01dfc2238e",
            "name": "kafka",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5e3f3238-ce0d-4cbc-a85f-0b01dfc2238e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: kafka",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: kafka\n",
            "yaml_incluster": "5590cdb736811be18c595bdc0e9c807f82e2d2902779ba6f7f9f45a41ad65f16"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/kafka/deployments/zookeeper",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "750357776008957316a5201ec7e8321b38c2e6967b835df72ca7cfbeeaa12e12",
            "live_uid": "c038aa7b-7d95-41d9-9c93-eda8d4b38804",
            "name": "zookeeper",
            "namespace": "kafka",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c038aa7b-7d95-41d9-9c93-eda8d4b38804",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zookeeper\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zookeeper\n  template:\n    metadata:\n      labels:\n        app: zookeeper\n    spec:\n      containers:\n        - name: zookeeper\n          image: confluentinc/cp-zookeeper:latest\n          ports:\n           - containerPort: 2181\n          env:\n            - name: ZOOKEEPER_CLIENT_PORT\n              value: \"2181\"",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zookeeper\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zookeeper\n  template:\n    metadata:\n      labels:\n        app: zookeeper\n    spec:\n      containers:\n      - env:\n        - name: ZOOKEEPER_CLIENT_PORT\n          value: \"2181\"\n        image: confluentinc/cp-zookeeper:latest\n        name: zookeeper\n        ports:\n        - containerPort: 2181\n",
            "yaml_incluster": "750357776008957316a5201ec7e8321b38c2e6967b835df72ca7cfbeeaa12e12"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/kafka/services/zookeeper-api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "7d438732c89787e613f870402db2adfe4daf586ea08ed2590da4f62899e2bc63",
            "live_uid": "6fff2497-1564-48ec-930c-686ba32aaa8f",
            "name": "zookeeper-api",
            "namespace": "kafka",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6fff2497-1564-48ec-930c-686ba32aaa8f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  name: zookeeper-api\n  namespace: kafka\nspec:\n  ports:\n  - port: 2181\n    targetPort: 2181\n  selector:\n    app: zookeeper",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: zookeeper-api\n  namespace: kafka\nspec:\n  ports:\n  - port: 2181\n    targetPort: 2181\n  selector:\n    app: zookeeper\n",
            "yaml_incluster": "7d438732c89787e613f870402db2adfe4daf586ea08ed2590da4f62899e2bc63"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/kafka/deployments/kafka",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "c3d3ac355c6a573f4ec80a839710954f1324e47cf9d27ece34341ab798c4b520",
            "live_uid": "1d8c9361-cecc-4f0c-af90-cf7477b6e628",
            "name": "kafka",
            "namespace": "kafka",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1d8c9361-cecc-4f0c-af90-cf7477b6e628",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafka\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafka\n  template:\n    metadata:\n      labels:\n        app: kafka\n    spec:\n      containers:\n      - name: kafka\n        image: confluentinc/cp-kafka:latest\n        ports:\n        - containerPort: 9092\n        env:\n        - name: KAFKA_BROKER_ID\n          value: \"1\"\n        - name: KAFKA_ZOOKEEPER_CONNECT\n          value: zookeeper-api.kafka.svc.cluster.local::2181\n        - name: KAFKA_ADVERTISED_LISTENERS\n          value: PLAINTEXT://kafka-api.kafka.svc.cluster.local:29092,PLAINTEXT_HOST://kafka-api.kafka.svc.cluster.local:9092\n        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP\n          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n        - name: KAFKA_INTER_BROKER_LISTENER_NAME\n          value: PLAINTEXT\n        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR\n          value: \"1\"",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafka\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafka\n  template:\n    metadata:\n      labels:\n        app: kafka\n    spec:\n      containers:\n      - env:\n        - name: KAFKA_BROKER_ID\n          value: \"1\"\n        - name: KAFKA_ZOOKEEPER_CONNECT\n          value: zookeeper-api.kafka.svc.cluster.local::2181\n        - name: KAFKA_ADVERTISED_LISTENERS\n          value: PLAINTEXT://kafka-api.kafka.svc.cluster.local:29092,PLAINTEXT_HOST://kafka-api.kafka.svc.cluster.local:9092\n        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP\n          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n        - name: KAFKA_INTER_BROKER_LISTENER_NAME\n          value: PLAINTEXT\n        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR\n          value: \"1\"\n        image: confluentinc/cp-kafka:latest\n        name: kafka\n        ports:\n        - containerPort: 9092\n",
            "yaml_incluster": "c3d3ac355c6a573f4ec80a839710954f1324e47cf9d27ece34341ab798c4b520"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/kafka/services/kafka-api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "aef92bd9787a6ac14d93b9236ba928d84c5c3003d1c3a4bf45cbf78708a51420",
            "live_uid": "5b32f6b3-840e-431f-89e7-5c175a5cc0fc",
            "name": "kafka-api",
            "namespace": "kafka",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5b32f6b3-840e-431f-89e7-5c175a5cc0fc",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafka-api\n  namespace: kafka\nspec:\n  ports:\n  - port: 9092\n    targetPort: 9092\n    name: service\n  - port: 29092\n    targetPort: 29092\n    name: broker\n  selector:\n    app: kafka",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafka-api\n  namespace: kafka\nspec:\n  ports:\n  - name: service\n    port: 9092\n    targetPort: 9092\n  - name: broker\n    port: 29092\n    targetPort: 29092\n  selector:\n    app: kafka\n",
            "yaml_incluster": "aef92bd9787a6ac14d93b9236ba928d84c5c3003d1c3a4bf45cbf78708a51420"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 5,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/kafka/deployments/kafdrop",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "ce129c8017d3989d4b559ec7fb27d7e1f7e7f821efe2588b6aeaed8e6bafd56a",
            "live_uid": "561cd889-dc48-4903-9c45-100b7078eb65",
            "name": "kafdrop",
            "namespace": "kafka",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "561cd889-dc48-4903-9c45-100b7078eb65",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafdrop\n  template:\n    metadata:\n      labels:\n        app: kafdrop\n    spec:\n      containers:\n      - name: kafdrop\n        image: obsidiandynamics/kafdrop:latest\n        ports:\n        - containerPort: 9000\n        env:\n        - name: KAFKA_BROKERCONNECT\n          value: http://kafka-api.kafka.svc.cluster.local:29092",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: kafdrop\n  template:\n    metadata:\n      labels:\n        app: kafdrop\n    spec:\n      containers:\n      - env:\n        - name: KAFKA_BROKERCONNECT\n          value: http://kafka-api.kafka.svc.cluster.local:29092\n        image: obsidiandynamics/kafdrop:latest\n        name: kafdrop\n        ports:\n        - containerPort: 9000\n",
            "yaml_incluster": "ce129c8017d3989d4b559ec7fb27d7e1f7e7f821efe2588b6aeaed8e6bafd56a"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 6,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/kafka/services/kafdrop",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "5b06e11a5e14dfaea449f913a8129be7805bed3f52710509fc32218cc086b4e9",
            "live_uid": "66dff816-d9f4-40c4-9037-b07c2050d4d5",
            "name": "kafdrop",
            "namespace": "kafka",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "66dff816-d9f4-40c4-9037-b07c2050d4d5",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  ports:\n  - port: 9000\n    targetPort: 9000\n    name: ui\n  selector:\n    app: kafdrop",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: kafdrop\n  namespace: kafka\nspec:\n  ports:\n  - name: ui\n    port: 9000\n    targetPort: 9000\n  selector:\n    app: kafdrop\n",
            "yaml_incluster": "5b06e11a5e14dfaea449f913a8129be7805bed3f52710509fc32218cc086b4e9"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.kafka.data.kubectl_path_documents.docs"
          ]
        }
      ]
    },
    {
      "module": "module.minio",
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "docs",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: minio",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio-server\n  namespace: minio\nspec:\n  replicas: 1 \n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      nodeSelector:                  \n        \"kubernetes.io/os\": linux    \n      volumes:\n      - name: minio-pvc\n        persistentVolumeClaim:\n          claimName: minio-pvc\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2021-04-18T19-26-29Z\n        imagePullPolicy: IfNotPresent \n        args:\n        - server\n        - /data\n        volumeMounts:\n        - name: minio-pvc\n          mountPath: '/data'\n        env:\n        - name: MINIO_ROOT_USER\n          value: \"minioadmin\" \n        - name: MINIO_ROOT_PASSWORD\n          value: \"minioadmin\"\n        - name: MINIO_ACCESS_KEY \n          value: \"minioadmin\" \n        - name: MINIO_SECRET_KEY\n          value: \"minioadmin\"\n        ports:\n        - containerPort: 9000",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: minio-service\n  namespace: minio\nspec:\n  type: NodePort\n  ports:\n  - port: 9000\n    targetPort: 9000\n    protocol: TCP\n    name: http\n  selector:\n    app: minio",
              "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minio-ingress\n  namespace: minio\n  annotations:\n    nginx.ingress.kubernetes.il/add-base-url: \"true\"\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n        - pathType: Prefix\n          path: /minio\n          backend:\n            service:\n              name: minio-service\n              port:\n                number: 9000",
              "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-pvc\n  namespace: minio\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi"
            ],
            "id": "e635bd60f267bfbaccc3d5f32635882a50b38ea002a1257c6c3d1fdfb3447153",
            "manifests": {
              "/api/v1/namespaces/minio": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: minio\n",
              "/api/v1/namespaces/minio/persistentvolumeclaims/minio-pvc": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-pvc\n  namespace: minio\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\n",
              "/api/v1/namespaces/minio/services/minio-service": "apiVersion: v1\nkind: Service\nmetadata:\n  name: minio-service\n  namespace: minio\nspec:\n  ports:\n  - name: http\n    port: 9000\n    protocol: TCP\n    targetPort: 9000\n  selector:\n    app: minio\n  type: NodePort\n",
              "/apis/apps/v1/namespaces/minio/deployments/minio-server": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio-server\n  namespace: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - args:\n        - server\n        - /data\n        env:\n        - name: MINIO_ROOT_USER\n          value: minioadmin\n        - name: MINIO_ROOT_PASSWORD\n          value: minioadmin\n        - name: MINIO_ACCESS_KEY\n          value: minioadmin\n        - name: MINIO_SECRET_KEY\n          value: minioadmin\n        image: minio/minio:RELEASE.2021-04-18T19-26-29Z\n        imagePullPolicy: IfNotPresent\n        name: minio\n        ports:\n        - containerPort: 9000\n        volumeMounts:\n        - mountPath: /data\n          name: minio-pvc\n      nodeSelector:\n        kubernetes.io/os: linux\n      volumes:\n      - name: minio-pvc\n        persistentVolumeClaim:\n          claimName: minio-pvc\n",
              "/apis/networking.k8s.io/v1/namespaces/minio/ingresses/minio-ingress": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.il/add-base-url: \"true\"\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\n  name: minio-ingress\n  namespace: minio\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n      - backend:\n          service:\n            name: minio-service\n            port:\n              number: 9000\n        path: /minio\n        pathType: Prefix\n"
            },
            "pattern": "minio/manifest.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_vars"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.minio",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "minio",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/minio",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "f75fb2115b2d59be3da92b661d1c39848670013a4ac20694e191973c723274e2",
            "live_uid": "c9aa6746-58a9-41fe-b865-b769f4b5b7d6",
            "name": "minio",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c9aa6746-58a9-41fe-b865-b769f4b5b7d6",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: minio",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: minio\n",
            "yaml_incluster": "f75fb2115b2d59be3da92b661d1c39848670013a4ac20694e191973c723274e2"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.minio.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/minio/deployments/minio-server",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "ba52b082c902183aa0031565b0d9dcc2df3d034029b957cb3fa604c1e14c2037",
            "live_uid": "c25b01df-c02c-4904-8a63-b4cb1370088e",
            "name": "minio-server",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c25b01df-c02c-4904-8a63-b4cb1370088e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio-server\n  namespace: minio\nspec:\n  replicas: 1 \n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      nodeSelector:                  \n        \"kubernetes.io/os\": linux    \n      volumes:\n      - name: minio-pvc\n        persistentVolumeClaim:\n          claimName: minio-pvc\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2021-04-18T19-26-29Z\n        imagePullPolicy: IfNotPresent \n        args:\n        - server\n        - /data\n        volumeMounts:\n        - name: minio-pvc\n          mountPath: '/data'\n        env:\n        - name: MINIO_ROOT_USER\n          value: \"minioadmin\" \n        - name: MINIO_ROOT_PASSWORD\n          value: \"minioadmin\"\n        - name: MINIO_ACCESS_KEY \n          value: \"minioadmin\" \n        - name: MINIO_SECRET_KEY\n          value: \"minioadmin\"\n        ports:\n        - containerPort: 9000",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio-server\n  namespace: minio\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - args:\n        - server\n        - /data\n        env:\n        - name: MINIO_ROOT_USER\n          value: minioadmin\n        - name: MINIO_ROOT_PASSWORD\n          value: minioadmin\n        - name: MINIO_ACCESS_KEY\n          value: minioadmin\n        - name: MINIO_SECRET_KEY\n          value: minioadmin\n        image: minio/minio:RELEASE.2021-04-18T19-26-29Z\n        imagePullPolicy: IfNotPresent\n        name: minio\n        ports:\n        - containerPort: 9000\n        volumeMounts:\n        - mountPath: /data\n          name: minio-pvc\n      nodeSelector:\n        kubernetes.io/os: linux\n      volumes:\n      - name: minio-pvc\n        persistentVolumeClaim:\n          claimName: minio-pvc\n",
            "yaml_incluster": "ba52b082c902183aa0031565b0d9dcc2df3d034029b957cb3fa604c1e14c2037"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.minio.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/minio/services/minio-service",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "13dea66ae49e96c482e5d12eee5cdd65861fd234d997fc6df708df521a16b396",
            "live_uid": "3389012e-f873-4351-95c2-3ac455b65b53",
            "name": "minio-service",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3389012e-f873-4351-95c2-3ac455b65b53",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  name: minio-service\n  namespace: minio\nspec:\n  type: NodePort\n  ports:\n  - port: 9000\n    targetPort: 9000\n    protocol: TCP\n    name: http\n  selector:\n    app: minio",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: minio-service\n  namespace: minio\nspec:\n  ports:\n  - name: http\n    port: 9000\n    protocol: TCP\n    targetPort: 9000\n  selector:\n    app: minio\n  type: NodePort\n",
            "yaml_incluster": "13dea66ae49e96c482e5d12eee5cdd65861fd234d997fc6df708df521a16b396"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.minio.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.k8s.io/v1/namespaces/minio/ingresses/minio-ingress",
            "ignore_fields": null,
            "kind": "Ingress",
            "live_manifest_incluster": "46324a130b36812273989aae7745056748182f175ba84b4edd22782abc47d09f",
            "live_uid": "af8041b3-3870-4da0-a2b9-54f7c5e9ff79",
            "name": "minio-ingress",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "af8041b3-3870-4da0-a2b9-54f7c5e9ff79",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minio-ingress\n  namespace: minio\n  annotations:\n    nginx.ingress.kubernetes.il/add-base-url: \"true\"\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n        - pathType: Prefix\n          path: /minio\n          backend:\n            service:\n              name: minio-service\n              port:\n                number: 9000",
            "yaml_body_parsed": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.il/add-base-url: \"true\"\n    nginx.ingress.kubernetes.io/ssl-redirect: \"false\"\n  name: minio-ingress\n  namespace: minio\nspec:\n  ingressClassName: nginx\n  rules:\n  - http:\n      paths:\n      - backend:\n          service:\n            name: minio-service\n            port:\n              number: 9000\n        path: /minio\n        pathType: Prefix\n",
            "yaml_incluster": "46324a130b36812273989aae7745056748182f175ba84b4edd22782abc47d09f"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.minio.data.kubectl_path_documents.docs"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/minio/persistentvolumeclaims/minio-pvc",
            "ignore_fields": null,
            "kind": "PersistentVolumeClaim",
            "live_manifest_incluster": "f91de6095f06c2b48a56cf14d575d719d4a9493bad5af54db0722822718549c6",
            "live_uid": "18d1524d-e1d9-47b3-8814-bd620aca1fb0",
            "name": "minio-pvc",
            "namespace": "minio",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "18d1524d-e1d9-47b3-8814-bd620aca1fb0",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-pvc\n  namespace: minio\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi",
            "yaml_body_parsed": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: minio-pvc\n  namespace: minio\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\n",
            "yaml_incluster": "f91de6095f06c2b48a56cf14d575d719d4a9493bad5af54db0722822718549c6"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.minio.data.kubectl_path_documents.docs"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
